@page "/doadores/editar/{Id:guid}"
@rendermode InteractiveAuto
@inject IDoadorService DoadorService

<PageTitle>Editar Doador</PageTitle>

<EditForm EditContext="@editContext" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />

    @if (editContext.GetValidationMessages().Any())
    {
        <MudAlert Severity="Severity.Error" Class="mt-6">
            <ValidationSummary />
        </MudAlert>
    }

    <MudGrid Justify="Justify.Center">
        <MudItem xs="12" Class="mt-6">
            <MudText Class="ml-4" Typo="Typo.h6">Editar Doador</MudText>
            <MudCardContent>
                <MudGrid>
                    <MudItem xs="6">
                        <MudTextField Label="Nome Completo"
                                      @bind-Value="model.NomeCompleto" For="@(() => model.NomeCompleto)" />
                    </MudItem>
                    <MudItem xs="6">
                        <MudTextField Label="Email"
                                      @bind-Value="model.Email" For="@(() => model.Email)" />
                    </MudItem>
                    <MudItem xs="6">
                        <MudNumericField @bind-Value="model.Peso" Label="Informe o peso" Format="F1" Variant="Variant.Text" For="@(() => model.Peso)" />
                    </MudItem>
                    <MudItem xs="6">
                        <MudTextField Label="Tipo Sanguíneo"
                                      @bind-Value="model.TipoSanguineo" For="@(() => model.TipoSanguineo)" />
                    </MudItem>
                    <MudItem xs="6">
                        <MudDatePicker @bind-Date="model.DataNascimento" Label="Data de Nascimento" For="@(() => model.DataNascimento)" />
                    </MudItem>
                    <MudItem xs="6">
                        <MudSelect @bind-Value="model.Genero" Label="Gênero" For="@(() => model.Genero)">
                            @foreach (var genero in _generos)
                            {
                                <MudSelectItem Value="genero">@genero</MudSelectItem>
                            }
                        </MudSelect>
                    </MudItem>
                    <MudItem xs="12">
                        <MudTextField Label="Fator Rh"
                                      @bind-Value="model.FatorRh" For="@(() => model.FatorRh)" />
                    </MudItem>
                </MudGrid>
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="mx-auto mt-2">Salvar Alterações</MudButton>
            </MudCardActions>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    [Parameter]
    public Guid Id { get; set; }

    private Doador model;
    private EditContext editContext;
    private List<string> _generos = new List<string> { "Masculino", "Feminino" };

    protected override async Task OnParametersSetAsync()
    {
        model = await DoadorService.ObterDoadorPorIdAsync(Id);
        editContext ??= new EditContext(model);
    }

    private async Task OnValidSubmit(EditContext context)
    {
        Console.WriteLine("Doador atualizado " + model);
        StateHasChanged();
    }
}
