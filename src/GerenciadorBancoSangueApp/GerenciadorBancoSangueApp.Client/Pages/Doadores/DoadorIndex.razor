@page "/doadores"
@rendermode InteractiveAuto
@inject IDoadorService DoadorService
@inject IDialogService DialogService

<PageTitle>Doador</PageTitle>

<MudGrid Class="mt-1 mb-2">
    <MudItem xs="6">
        <MudText Class="ml-4" Typo="Typo.h6">Doadores</MudText>
    </MudItem>
    <MudItem xs="6" Class="d-flex justify-end">
        <MudButton Class="mr-4" Href="/doadores/criar" Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Add" Color="Color.Success">
            Cadastrar Novo Doador
        </MudButton>
    </MudItem>
</MudGrid>

<MudTable Items="@doadores" Hover="true" Filter="new Func<Doador,bool>(FilterFunc1)" Height="65vh" Breakpoint="Breakpoint.Sm" Virtualize="true" FixedHeader="true">
    <ToolBarContent>
        <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Nome Completo</MudTh>
        <MudTh>Email</MudTh>
        <MudTh>Data de Nascimento</MudTh>
        <MudTh>Gênero</MudTh>
        <MudTh>Peso</MudTh>
        <MudTh>Tipo Sanguíneo</MudTh>
        <MudTh>Fator Rh</MudTh>
        <MudTh>Opções</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Nome Completo">@context.NomeCompleto</MudTd>
        <MudTd DataLabel="Email">@context.Email</MudTd>
        <MudTd DataLabel="Data de Nascimento">@context.DataNascimento</MudTd>
        <MudTd DataLabel="Gênero">@context.Genero</MudTd>
        <MudTd DataLabel="Peso">@context.Peso</MudTd>
        <MudTd DataLabel="Tipo Sanguíneo">@context.TipoSanguineo</MudTd>
        <MudTd DataLabel="Fator RH">@context.FatorRh</MudTd>
        <MudTd DataLabel="Opções">
            <MudStack Spacing="2" Row="true">
                <MudTooltip Text="Editar registro">
                    <MudButton Href=@($"/doadores/editar/{@context.Id}") Variant="Variant.Outlined" Color="Color.Warning"> 
                        <MudIcon Icon="@Icons.Material.Filled.Edit" />
                    </MudButton>
                </MudTooltip>
                <MudTooltip Text="Deletar registro">
                    <MudButton Variant="Variant.Outlined" Color="Color.Error" OnClick="() => DeleteUserAsync(context)">
                        <MudIcon Icon="@Icons.Material.Filled.Delete" />
                    </MudButton>
                </MudTooltip>
            </MudStack>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager RowsPerPageString="Linhas por página"/>
    </PagerContent>
</MudTable>

@code {
    private List<Doador> doadores;
    private string searchString1 = "";

    private bool FilterFunc1(Doador doador) => FilterFunc(doador, searchString1);

    private bool FilterFunc(Doador doador, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (doador.NomeCompleto.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (doador.Email.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    protected override async Task OnInitializedAsync()
    {
        doadores = await DoadorService.ObterTodosDoadoresAsync();
    }

    private async Task DeleteUserAsync(Doador doador)
    {
        var parameters = new DialogParameters<DoadorDelete>
        {
            { x => x.ContentText, $"Você realmente deseja excluir o registro de {doador.NomeCompleto}? Esta ação não poderá ser desfeita." },
            { x => x.ButtonText, "Excluir" },
            { x => x.Color, Color.Error }
        };

        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraSmall };

        var dialog = await DialogService.ShowAsync<DoadorDelete>("Excluir", parameters, options);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            var deleteResult = await DoadorService.ExcluirDoadorAsync(doador.Id);
            if (deleteResult)
            {
                doadores.Remove(doador);
            }
        }
    }
}